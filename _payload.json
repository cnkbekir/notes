[{"data":1,"prerenderedAt":291},["ShallowReactive",2],{"/":3,"search-api":25,"content-query-GOxZ8CQ1Qu":26},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":7,"description":8,"listed":6,"layout":9,"readingTime":10,"body":13,"_type":19,"_id":20,"_source":21,"_file":22,"_stem":23,"_extension":24},"/","",false,"Home - Bloggrify - Mistral","This is the home page of the Bloggrify Mistral theme. It is a simple and clean theme for your blog.","home",{"text":11,"minutes":12,"time":12,"words":12},"0 min read",0,{"type":14,"children":15,"toc":16},"root",[],{"title":5,"searchDepth":17,"depth":17,"links":18},2,[],"markdown","content:index.md","content","index.md","index","md",[],[27,143],{"_path":28,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":29,"description":5,"id":30,"date":31,"categories":32,"tags":34,"cover":5,"readingTime":38,"body":43,"_type":19,"_id":140,"_source":21,"_file":141,"_stem":142,"_extension":24},"/nuxt-capacitor-newrelic","Nuxt - Capacitor - New Relic","2","2023-11-16",[33],"web",[35,36,37],"nuxt","capacitor","newrelic",{"text":39,"minutes":40,"time":41,"words":42},"3 min read",2.02,121200,404,{"type":14,"children":44,"toc":138},[45,53,63,68,82,87,95,107,112,120,125,133],{"type":46,"tag":47,"props":48,"children":49},"element","p",{},[50],{"type":51,"value":52},"text","Nuxt ve Capacitor ile geliştirdiğim mobil uygulamamı takip etmek için New Relic'i nasıl kurduğumu anlatıcam.\nÖncelikle New Relic ekibinin sunduğu paketi yüklüyoruz:",{"type":46,"tag":54,"props":55,"children":57},"pre",{"code":56},"npm i @newrelic/newrelic-capacitor-plugin && npx cap sync\n",[58],{"type":46,"tag":59,"props":60,"children":61},"code",{"__ignoreMap":5},[62],{"type":51,"value":56},{"type":46,"tag":47,"props":64,"children":65},{},[66],{"type":51,"value":67},"New Relic hesabımızda Add Data butonuyla kurulum ekranını açarak listeden Capacitor'ü seçiyoruz. Buradaki bilgilerin çoğunu o ekranda da bulabilirsiniz. Alacağımız token'ı aşağıdaki kodda da kullanıcaz.",{"type":46,"tag":47,"props":69,"children":70},{},[71,73],{"type":51,"value":72},"Vue.js projelerinde App.vue dosyasında yapılan paket ayarlarını Nuxt projelerinde plugins klasöründe yapabiliyoruz. Buraya eklediğimiz dosyalar otomatik çalışıyor. Bilgi için: ",{"type":46,"tag":74,"props":75,"children":79},"a",{"href":76,"rel":77},"https://nuxt.com/docs/guide/directory-structure/plugins",[78],"nofollow",[80],{"type":51,"value":81},"plugins/ · Nuxt Directory Structure",{"type":46,"tag":47,"props":83,"children":84},{},[85],{"type":51,"value":86},"Projede plugins klasörü altında newrelic.ts dosyasını oluşturuyoruz:",{"type":46,"tag":54,"props":88,"children":90},{"code":89},"import { NewRelicCapacitorPlugin, NREnums, AgentConfiguration } from '@newrelic/newrelic-capacitor-plugin';\nimport { Capacitor } from '@capacitor/core';\n\nexport default defineNuxtPlugin(() => {\n  var appToken;\n  if (Capacitor.getPlatform() === 'ios') {\n    appToken = '...';\n  } else {\n    appToken = '...';\n  }\n\n  let agentConfig : AgentConfiguration = {\n    //Android Specific\n    // Optional:Enable or disable collection of event data.\n    analyticsEventEnabled: true,\n\n    // Optional:Enable or disable crash reporting.\n    crashReportingEnabled: true,\n\n    // Optional:Enable or disable interaction tracing. Trace instrumentation still occurs, but no traces are harvested. This will disable default and custom interactions.\n    interactionTracingEnabled: true,\n\n    // Optional:Enable or disable reporting successful HTTP requests to the MobileRequest event type.\n    networkRequestEnabled: true,\n\n    // Optional:Enable or disable reporting network and HTTP request errors to the MobileRequestError event type.\n    networkErrorRequestEnabled: true,\n\n    // Optional:Enable or disable capture of HTTP response bodies for HTTP error traces, and MobileRequestError events.\n    httpResponseBodyCaptureEnabled: true,\n\n    // Optional:Enable or disable agent logging.\n    loggingEnabled: true,\n\n    // Optional:Specifies the log level. Omit this field for the default log level.\n    // Options include: ERROR (least verbose), WARNING, INFO, VERBOSE, AUDIT (most verbose).\n    logLevel: NREnums.LogLevel.ERROR,\n\n    // iOS Specific\n    // Optional:Enable/Disable automatic instrumentation of WebViews\n    webViewInstrumentation: true,\n\n    // Optional:Set a specific collector address for sending data. Omit this field for default address.\n    // collectorAddress: \"\",\n\n    // Optional:Set a specific crash collector address for sending crashes. Omit this field for default address.\n    // crashCollectorAddress: \"\",\n\n    // Optional:Enable or disable sending JS console logs to New Relic.\n    sendConsoleEvents: true,\n\n    // Optional: nable or disable reporting data using different endpoints for US government clients.\n     fedRampEnabled: false\n  }\n\n  NewRelicCapacitorPlugin.start({appKey:appToken, agentConfiguration:agentConfig})\n})\n\n",[91],{"type":46,"tag":59,"props":92,"children":93},{"__ignoreMap":5},[94],{"type":51,"value":89},{"type":46,"tag":47,"props":96,"children":97},{},[98,100],{"type":51,"value":99},"Burada fedRampEnabled ayarı ile ilgili bir sorun varmış. Bundan dolayı çok test yapmak zorunda kaldım. GitHub'da bir issue oluşturdum ve sorun kısa sürede çözüldü: ",{"type":46,"tag":74,"props":101,"children":104},{"href":102,"rel":103},"https://github.com/newrelic/newrelic-capacitor-plugin/issues/59",[78],[105],{"type":51,"value":106},"Can't get android logs - Nuxt3 - Ionic · Issue #59 · newrelic/newrelic-capacitor-plugin (github.com)",{"type":46,"tag":47,"props":108,"children":109},{},[110],{"type":51,"value":111},"Android için build.gradle dosyamızı düzenliyoruz:",{"type":46,"tag":54,"props":113,"children":115},{"code":114},"buildscript {\n    ...\n    repositories {\n      ...\n      mavenCentral()\n    }\n    dependencies {\n      ...\n      classpath \"com.newrelic.agent.android:agent-gradle-plugin:7.1.0\"\n    }\n  }\n",[116],{"type":46,"tag":59,"props":117,"children":118},{"__ignoreMap":5},[119],{"type":51,"value":114},{"type":46,"tag":47,"props":121,"children":122},{},[123],{"type":51,"value":124},"Ve app/build.gradle dosyamızı düzenliyoruz:",{"type":46,"tag":54,"props":126,"children":128},{"code":127},"apply plugin: \"com.android.application\"\napply plugin: 'newrelic' // \u003C-- bu satırı ekle\n",[129],{"type":46,"tag":59,"props":130,"children":131},{"__ignoreMap":5},[132],{"type":51,"value":127},{"type":46,"tag":47,"props":134,"children":135},{},[136],{"type":51,"value":137},"Projelerimizi derleyerek yayına alabiliriz.",{"title":5,"searchDepth":17,"depth":17,"links":139},[],"content:nuxt-capacitor-newrelic.md","nuxt-capacitor-newrelic.md","nuxt-capacitor-newrelic",{"_path":144,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":145,"description":5,"id":146,"date":31,"categories":147,"tags":148,"cover":5,"readingTime":150,"body":155,"_type":19,"_id":288,"_source":21,"_file":289,"_stem":290,"_extension":24},"/statik-wordpress-sitesi","Statik Wordpress Sitesi","1",[33],[149],"wordpress",{"text":151,"minutes":152,"time":153,"words":154},"2 min read",1.315,78900,263,{"type":14,"children":156,"toc":286},[157,162,197,202,207,212,224,229,237,242,247,255,260,268,276,281],{"type":46,"tag":47,"props":158,"children":159},{},[160],{"type":51,"value":161},"Kullanacağımız sistemler:",{"type":46,"tag":163,"props":164,"children":165},"ul",{},[166,172,177,187,192],{"type":46,"tag":167,"props":168,"children":169},"li",{},[170],{"type":51,"value":171},"Wordpress",{"type":46,"tag":167,"props":173,"children":174},{},[175],{"type":51,"value":176},"CloudFlare",{"type":46,"tag":167,"props":178,"children":179},{},[180],{"type":46,"tag":74,"props":181,"children":184},{"href":182,"rel":183},"https://wordpress.org/plugins/simply-static/",[78],[185],{"type":51,"value":186},"Simply Static – WordPress plugin",{"type":46,"tag":167,"props":188,"children":189},{},[190],{"type":51,"value":191},"Github Actions",{"type":46,"tag":167,"props":193,"children":194},{},[195],{"type":51,"value":196},"Bash script",{"type":46,"tag":47,"props":198,"children":199},{},[200],{"type":51,"value":201},"Wordpress'te simply statik eklentisini kuruyoruz. Eklentinin Settings -> Deployment sayfasında Deployment Method olarak Local Directory seçiyoruz. PATH olarak /var/www/static/ girdim.\nBulunduğumuz domainle aynı yerde yayınlamayacağımız için Replacing URLs ayarlarında Relative Paths seçip / değerini giriyoruz.\nAdvanced ayarlar sayfasında da Force URL Replacements seçeneğini aktifleştiriyoruz.",{"type":46,"tag":47,"props":203,"children":204},{},[205],{"type":51,"value":206},"Benim DNS ayarlarım CloudFlare'de. Sitemi Proxied seçeneğini kapatıp sadece DNS kaydı olarak tutuyorum. certbot ile sunucuda SSL ayarlıyorum.",{"type":46,"tag":47,"props":208,"children":209},{},[210],{"type":51,"value":211},"Sunucuda dizini oluşturup eklentide Generate Static Files butonuna basarak işlemi başlatıyoruz.\nDebugging Mode ayarı var, onu aktifleştirebiliriz. Activity Log sayfasından işlemi takip edebiliyoruz.",{"type":46,"tag":47,"props":213,"children":214},{},[215,217],{"type":51,"value":216},"Sunucuda /var/www/static/ dizinini GitHub'da bir repo açarak oraya yüklüyoruz.\nDeploy keys ile yapmak için: ",{"type":46,"tag":74,"props":218,"children":221},{"href":219,"rel":220},"https://dylancastillo.co/how-to-use-github-deploy-keys/",[78],[222],{"type":51,"value":223},"How to Use GitHub Deploy Keys (dylancastillo.co)",{"type":46,"tag":47,"props":225,"children":226},{},[227],{"type":51,"value":228},"İlk sefer dışında buraya girmeye gerek kalmasın diye güncellemeleri push'layan bir bash script'i root hesabındayken crontab'a ekliyorum.",{"type":46,"tag":54,"props":230,"children":232},{"code":231},"* * * * * [ $(find /var/www/ufkayolculuk_wp/index.html -type f | wc -l) -gt 0 ];then /var/www/static.sh && cd /var/www/static && git add . && git commit -m \"Automatic Commit\" && git push; fi\n",[233],{"type":46,"tag":59,"props":234,"children":235},{"__ignoreMap":5},[236],{"type":51,"value":231},{"type":46,"tag":47,"props":238,"children":239},{},[240],{"type":51,"value":241},"Baştaki if komutunu bir kaç denemeden sonra farkederek ekledim. Statik dosyaların generate işlemi sırasında index.html olmadığı için bu sorgu sayesinde o işlemin bitmesini beklemiş oluyorum.",{"type":46,"tag":47,"props":243,"children":244},{},[245],{"type":51,"value":246},"GitHub deploy keys kullanmazsam Git işlemleri yapılabilmesi için şu komutu kullanıp bir defa manuel git commit ve push işlemini yapıyorum",{"type":46,"tag":54,"props":248,"children":250},{"code":249},"git config --global credential.helper store\n",[251],{"type":46,"tag":59,"props":252,"children":253},{"__ignoreMap":5},[254],{"type":51,"value":249},{"type":46,"tag":47,"props":256,"children":257},{},[258],{"type":51,"value":259},"Cron job ile çalıştırılan /var/www/static.sh dosyası:",{"type":46,"tag":54,"props":261,"children":263},{"code":262},"#!/bin/sh\n/usr/bin/find /var/www/static/ -maxdepth 3 -type f -name 'index.html' -exec /usr/bin/sed -i 's+\u003C\\\\/+\u003C/+g' {} \\;\n",[264],{"type":46,"tag":59,"props":265,"children":266},{"__ignoreMap":5},[267],{"type":51,"value":262},{"type":46,"tag":54,"props":269,"children":271},{"code":270},"chmod +x /var/www/static.sh\n",[272],{"type":46,"tag":59,"props":273,"children":274},{"__ignoreMap":5},[275],{"type":51,"value":270},{"type":46,"tag":47,"props":277,"children":278},{},[279],{"type":51,"value":280},"CloudFlare Pages'ta yeni bir kayıt oluşturuyoruz, GitHub'daki repomuza bağlıyoruz. Statik dosyalar olduğu için build ayarlarında değişiklik yapmadan yayına alıyoruz.",{"type":46,"tag":47,"props":282,"children":283},{},[284],{"type":51,"value":285},"Artık GitHub'da her değişiklikte sitemiz güncellenicek. Ayrıca CloudFlare Pages'taki pages.dev uzantılı adresi Custom Domains sayfasından kendi alan adınıza bağlayabiliyorsunuz.",{"title":5,"searchDepth":17,"depth":17,"links":287},[],"content:statik-wordpress-sitesi.md","statik-wordpress-sitesi.md","statik-wordpress-sitesi",1730580286094]