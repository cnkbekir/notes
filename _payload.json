[{"data":1,"prerenderedAt":569},["ShallowReactive",2],{"/":3,"search-api":25,"content-query-GOxZ8CQ1Qu":26},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":7,"description":8,"listed":6,"layout":9,"readingTime":10,"body":13,"_type":19,"_id":20,"_source":21,"_file":22,"_stem":23,"_extension":24},"/","",false,"Home - Bloggrify - Mistral","This is the home page of the Bloggrify Mistral theme. It is a simple and clean theme for your blog.","home",{"text":11,"minutes":12,"time":12,"words":12},"0 min read",0,{"type":14,"children":15,"toc":16},"root",[],{"title":5,"searchDepth":17,"depth":17,"links":18},2,[],"markdown","content:index.md","content","index.md","index","md",[],[27,316,423],{"_path":28,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":29,"description":5,"id":30,"date":31,"categories":32,"tags":34,"cover":5,"readingTime":36,"body":41,"_type":19,"_id":314,"_source":21,"_file":315,"_stem":29,"_extension":24},"/nuxt-studio-kullanarak-blog-sitesi","Nuxt Studio Kullanarak Blog Sitesi","3","2024-11-03",[33],"web",[35],"nuxt",{"text":37,"minutes":38,"time":39,"words":40},"1 min read",0.96,57600,192,{"type":14,"children":42,"toc":312},[43,51,56,69,82,102,111,120,129,150,159,170,181,186,206,211,216,221,287,292,306],{"type":44,"tag":45,"props":46,"children":47},"element","p",{},[48],{"type":49,"value":50},"text","Geçen yıl Obsidian'da tuttuğum notları Obsidian publish kullanarak yayınlamıştım. Daha sonra ücretini ödemek istemedim ve site kapandı. Ücretsiz bir şekilde yayınlamak ve Nuxt kullanmak istemiştim, bu yazımda nasıl yaptığımı yazıcam.",{"type":44,"tag":45,"props":52,"children":53},{},[54],{"type":49,"value":55},"Nuxt Studio, git tabanlı bir cms sunuyor. Markdown dosyalarınızı panelden düzenleyebiliyorsunuz, yaptığınız değişiklikler git hesabınızdan commit atılıyor. Hazır gelen yaygınlaştırma scripti var, siz deploy butonuna tıkladığınızda siteniz otomatik yayınlanıyor.",{"type":44,"tag":45,"props":57,"children":58},{},[59,67],{"type":44,"tag":60,"props":61,"children":65},"a",{"href":62,"rel":63},"https://github.com/bloggrify/bloggrify",[64],"nofollow",[66],{"type":49,"value":62},{"type":49,"value":68}," kullandım.",{"type":44,"tag":45,"props":70,"children":71},{},[72,74,80],{"type":49,"value":73},"bilgisayarımda git klasörlerimin olduğu dizinde terminali açıp şunu çalıştırdım:\ngit clone ",{"type":44,"tag":60,"props":75,"children":78},{"href":76,"rel":77},"https://github.com/bloggrify/demo-mistral.git",[64],[79],{"type":49,"value":76},{"type":49,"value":81}," bloggrify",{"type":44,"tag":45,"props":83,"children":84},{},[85,87,93,95],{"type":49,"value":86},"yeni repo oluşturdum ",{"type":44,"tag":60,"props":88,"children":91},{"href":89,"rel":90},"https://github.com/new",[64],[92],{"type":49,"value":89},{"type":49,"value":94},"\noluşturduktan sonra bilgisayarımda oluşturduğum klasörde şu komutları çalıştırdım:\n",{"type":44,"tag":96,"props":97,"children":99},"code",{"className":98},[],[100],{"type":49,"value":101},"git init",{"type":44,"tag":45,"props":103,"children":104},{},[105],{"type":44,"tag":96,"props":106,"children":108},{"className":107},[],[109],{"type":49,"value":110},"git add .",{"type":44,"tag":45,"props":112,"children":113},{},[114],{"type":44,"tag":96,"props":115,"children":117},{"className":116},[],[118],{"type":49,"value":119},"git commit -m \"first commit\"",{"type":44,"tag":45,"props":121,"children":122},{},[123],{"type":44,"tag":96,"props":124,"children":126},{"className":125},[],[127],{"type":49,"value":128},"git branch -M main",{"type":44,"tag":45,"props":130,"children":131},{},[132,138,140],{"type":44,"tag":96,"props":133,"children":135},{"className":134},[],[136],{"type":49,"value":137},"git remote add origin",{"type":49,"value":139}," ",{"type":44,"tag":60,"props":141,"children":144},{"href":142,"rel":143},"https://github.com/cnkbekir/notes.git",[64],[145],{"type":44,"tag":96,"props":146,"children":148},{"className":147},[],[149],{"type":49,"value":142},{"type":44,"tag":45,"props":151,"children":152},{},[153],{"type":44,"tag":96,"props":154,"children":156},{"className":155},[],[157],{"type":49,"value":158},"git push -u origin main",{"type":44,"tag":45,"props":160,"children":161},{},[162,164],{"type":49,"value":163},"push işleminde şöyle bi hata aldım:\n",{"type":44,"tag":96,"props":165,"children":167},{"className":166},[],[168],{"type":49,"value":169},"error: RPC failed; HTTP 400 curl 22 The requested URL returned error: 400 send-pack: unexpected disconnect while reading sideband packet",{"type":44,"tag":45,"props":171,"children":172},{},[173,175],{"type":49,"value":174},"Şu komutu yazdıktan sonra hata çözüldü, push işlemini tekrar yaptım:\n",{"type":44,"tag":96,"props":176,"children":178},{"className":177},[],[179],{"type":49,"value":180},"git config --global http.postBuffer 157286400",{"type":44,"tag":45,"props":182,"children":183},{},[184],{"type":49,"value":185},"cloudflare'de DNS ayarlarıma CNAME kaydı ekledim;",{"type":44,"tag":187,"props":188,"children":189},"ul",{},[190,196,201],{"type":44,"tag":191,"props":192,"children":193},"li",{},[194],{"type":49,"value":195},"name: notes",{"type":44,"tag":191,"props":197,"children":198},{},[199],{"type":49,"value":200},"Content: cnkbekir.github.io",{"type":44,"tag":191,"props":202,"children":203},{},[204],{"type":49,"value":205},"Proxied",{"type":44,"tag":45,"props":207,"children":208},{},[209],{"type":49,"value":210},"bloggrify demosundan gelen .github/workflows/deploy.yml dosyasını sildim.",{"type":44,"tag":45,"props":212,"children":213},{},[214],{"type":49,"value":215},"repo'ya kodları attıktan sonra nuxt studio kullandım. New project -> Import a nuxt project\nmenüde project -> deploy sayfasında Deploy butonuna tıkladım. İlk işlemden sonra \"Use custom domain\" seçeneği aktifleşti, onu işaretledim. Domain alanına notes.bekir.dev girip kaydettim.",{"type":44,"tag":45,"props":217,"children":218},{},[219],{"type":49,"value":220},"ilk deployment işlemi pnpm versiyon hatası verdi. (bu hataları github reposunda actions içerisinde görebiliyoruz.)\nrepo'daki .github/workflows/studio.yml dosyasında pnpm/action-setup@v4 kısmına with şeçeneği ekledim:",{"type":44,"tag":222,"props":223,"children":227},"pre",{"className":224,"code":225,"language":226,"meta":5,"style":5},"language-yaml shiki shiki-themes catppuccin-frappe github-dark","uses: pnpm/action-setup@v4\n    with:\n        version: 9\n","yaml",[228],{"type":44,"tag":96,"props":229,"children":230},{"__ignoreMap":5},[231,255,268],{"type":44,"tag":232,"props":233,"children":236},"span",{"class":234,"line":235},"line",1,[237,243,249],{"type":44,"tag":232,"props":238,"children":240},{"style":239},"--shiki-default:#8CAAEE;--shiki-dark:#85E89D",[241],{"type":49,"value":242},"uses",{"type":44,"tag":232,"props":244,"children":246},{"style":245},"--shiki-default:#81C8BE;--shiki-dark:#E1E4E8",[247],{"type":49,"value":248},":",{"type":44,"tag":232,"props":250,"children":252},{"style":251},"--shiki-default:#A6D189;--shiki-dark:#9ECBFF",[253],{"type":49,"value":254}," pnpm/action-setup@v4\n",{"type":44,"tag":232,"props":256,"children":257},{"class":234,"line":17},[258,263],{"type":44,"tag":232,"props":259,"children":260},{"style":239},[261],{"type":49,"value":262},"    with",{"type":44,"tag":232,"props":264,"children":265},{"style":245},[266],{"type":49,"value":267},":\n",{"type":44,"tag":232,"props":269,"children":271},{"class":234,"line":270},3,[272,277,281],{"type":44,"tag":232,"props":273,"children":274},{"style":239},[275],{"type":49,"value":276},"        version",{"type":44,"tag":232,"props":278,"children":279},{"style":245},[280],{"type":49,"value":248},{"type":44,"tag":232,"props":282,"children":284},{"style":283},"--shiki-default:#EF9F76;--shiki-dark:#79B8FF",[285],{"type":49,"value":286}," 9\n",{"type":44,"tag":45,"props":288,"children":289},{},[290],{"type":49,"value":291},"başka hatalar da verdi. package-lock dosyalarını sildim, nuxt versiyonunu yükselttim.\ncommitleyince yine otomatik deploy başladı, siteyi yayınladı.",{"type":44,"tag":45,"props":293,"children":294},{},[295,297,304],{"type":49,"value":296},"site ayarlarını yaptım, ",{"type":44,"tag":60,"props":298,"children":301},{"href":299,"rel":300},"https://github.com/cnkbekir/notes/commit/2b1319bbf92e4dee714b3e1dd65c36adacc838ce",[64],[302],{"type":49,"value":303},"commitlerime",{"type":49,"value":305}," bakılabilir.",{"type":44,"tag":307,"props":308,"children":309},"style",{},[310],{"type":49,"value":311},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":5,"searchDepth":17,"depth":17,"links":313},[],"content:Nuxt Studio Kullanarak Blog Sitesi.md","Nuxt Studio Kullanarak Blog Sitesi.md",{"_path":317,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":318,"description":5,"id":319,"date":320,"categories":321,"tags":322,"cover":5,"readingTime":325,"body":330,"_type":19,"_id":420,"_source":21,"_file":421,"_stem":422,"_extension":24},"/nuxt-capacitor-newrelic","Nuxt - Capacitor - New Relic","2","2023-11-16",[33],[35,323,324],"capacitor","newrelic",{"text":326,"minutes":327,"time":328,"words":329},"3 min read",2.02,121200,404,{"type":14,"children":331,"toc":418},[332,337,345,350,362,367,375,387,392,400,405,413],{"type":44,"tag":45,"props":333,"children":334},{},[335],{"type":49,"value":336},"Nuxt ve Capacitor ile geliştirdiğim mobil uygulamamı takip etmek için New Relic'i nasıl kurduğumu anlatıcam.\nÖncelikle New Relic ekibinin sunduğu paketi yüklüyoruz:",{"type":44,"tag":222,"props":338,"children":340},{"code":339},"npm i @newrelic/newrelic-capacitor-plugin && npx cap sync\n",[341],{"type":44,"tag":96,"props":342,"children":343},{"__ignoreMap":5},[344],{"type":49,"value":339},{"type":44,"tag":45,"props":346,"children":347},{},[348],{"type":49,"value":349},"New Relic hesabımızda Add Data butonuyla kurulum ekranını açarak listeden Capacitor'ü seçiyoruz. Buradaki bilgilerin çoğunu o ekranda da bulabilirsiniz. Alacağımız token'ı aşağıdaki kodda da kullanıcaz.",{"type":44,"tag":45,"props":351,"children":352},{},[353,355],{"type":49,"value":354},"Vue.js projelerinde App.vue dosyasında yapılan paket ayarlarını Nuxt projelerinde plugins klasöründe yapabiliyoruz. Buraya eklediğimiz dosyalar otomatik çalışıyor. Bilgi için: ",{"type":44,"tag":60,"props":356,"children":359},{"href":357,"rel":358},"https://nuxt.com/docs/guide/directory-structure/plugins",[64],[360],{"type":49,"value":361},"plugins/ · Nuxt Directory Structure",{"type":44,"tag":45,"props":363,"children":364},{},[365],{"type":49,"value":366},"Projede plugins klasörü altında newrelic.ts dosyasını oluşturuyoruz:",{"type":44,"tag":222,"props":368,"children":370},{"code":369},"import { NewRelicCapacitorPlugin, NREnums, AgentConfiguration } from '@newrelic/newrelic-capacitor-plugin';\nimport { Capacitor } from '@capacitor/core';\n\nexport default defineNuxtPlugin(() => {\n  var appToken;\n  if (Capacitor.getPlatform() === 'ios') {\n    appToken = '...';\n  } else {\n    appToken = '...';\n  }\n\n  let agentConfig : AgentConfiguration = {\n    //Android Specific\n    // Optional:Enable or disable collection of event data.\n    analyticsEventEnabled: true,\n\n    // Optional:Enable or disable crash reporting.\n    crashReportingEnabled: true,\n\n    // Optional:Enable or disable interaction tracing. Trace instrumentation still occurs, but no traces are harvested. This will disable default and custom interactions.\n    interactionTracingEnabled: true,\n\n    // Optional:Enable or disable reporting successful HTTP requests to the MobileRequest event type.\n    networkRequestEnabled: true,\n\n    // Optional:Enable or disable reporting network and HTTP request errors to the MobileRequestError event type.\n    networkErrorRequestEnabled: true,\n\n    // Optional:Enable or disable capture of HTTP response bodies for HTTP error traces, and MobileRequestError events.\n    httpResponseBodyCaptureEnabled: true,\n\n    // Optional:Enable or disable agent logging.\n    loggingEnabled: true,\n\n    // Optional:Specifies the log level. Omit this field for the default log level.\n    // Options include: ERROR (least verbose), WARNING, INFO, VERBOSE, AUDIT (most verbose).\n    logLevel: NREnums.LogLevel.ERROR,\n\n    // iOS Specific\n    // Optional:Enable/Disable automatic instrumentation of WebViews\n    webViewInstrumentation: true,\n\n    // Optional:Set a specific collector address for sending data. Omit this field for default address.\n    // collectorAddress: \"\",\n\n    // Optional:Set a specific crash collector address for sending crashes. Omit this field for default address.\n    // crashCollectorAddress: \"\",\n\n    // Optional:Enable or disable sending JS console logs to New Relic.\n    sendConsoleEvents: true,\n\n    // Optional: nable or disable reporting data using different endpoints for US government clients.\n     fedRampEnabled: false\n  }\n\n  NewRelicCapacitorPlugin.start({appKey:appToken, agentConfiguration:agentConfig})\n})\n\n",[371],{"type":44,"tag":96,"props":372,"children":373},{"__ignoreMap":5},[374],{"type":49,"value":369},{"type":44,"tag":45,"props":376,"children":377},{},[378,380],{"type":49,"value":379},"Burada fedRampEnabled ayarı ile ilgili bir sorun varmış. Bundan dolayı çok test yapmak zorunda kaldım. GitHub'da bir issue oluşturdum ve sorun kısa sürede çözüldü: ",{"type":44,"tag":60,"props":381,"children":384},{"href":382,"rel":383},"https://github.com/newrelic/newrelic-capacitor-plugin/issues/59",[64],[385],{"type":49,"value":386},"Can't get android logs - Nuxt3 - Ionic · Issue #59 · newrelic/newrelic-capacitor-plugin (github.com)",{"type":44,"tag":45,"props":388,"children":389},{},[390],{"type":49,"value":391},"Android için build.gradle dosyamızı düzenliyoruz:",{"type":44,"tag":222,"props":393,"children":395},{"code":394},"buildscript {\n    ...\n    repositories {\n      ...\n      mavenCentral()\n    }\n    dependencies {\n      ...\n      classpath \"com.newrelic.agent.android:agent-gradle-plugin:7.1.0\"\n    }\n  }\n",[396],{"type":44,"tag":96,"props":397,"children":398},{"__ignoreMap":5},[399],{"type":49,"value":394},{"type":44,"tag":45,"props":401,"children":402},{},[403],{"type":49,"value":404},"Ve app/build.gradle dosyamızı düzenliyoruz:",{"type":44,"tag":222,"props":406,"children":408},{"code":407},"apply plugin: \"com.android.application\"\napply plugin: 'newrelic' // \u003C-- bu satırı ekle\n",[409],{"type":44,"tag":96,"props":410,"children":411},{"__ignoreMap":5},[412],{"type":49,"value":407},{"type":44,"tag":45,"props":414,"children":415},{},[416],{"type":49,"value":417},"Projelerimizi derleyerek yayına alabiliriz.",{"title":5,"searchDepth":17,"depth":17,"links":419},[],"content:nuxt-capacitor-newrelic.md","nuxt-capacitor-newrelic.md","nuxt-capacitor-newrelic",{"_path":424,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":425,"description":5,"id":426,"date":320,"categories":427,"tags":428,"cover":5,"readingTime":430,"body":435,"_type":19,"_id":566,"_source":21,"_file":567,"_stem":568,"_extension":24},"/statik-wordpress-sitesi","Statik Wordpress Sitesi","1",[33],[429],"wordpress",{"text":431,"minutes":432,"time":433,"words":434},"2 min read",1.315,78900,263,{"type":14,"children":436,"toc":564},[437,442,475,480,485,490,502,507,515,520,525,533,538,546,554,559],{"type":44,"tag":45,"props":438,"children":439},{},[440],{"type":49,"value":441},"Kullanacağımız sistemler:",{"type":44,"tag":187,"props":443,"children":444},{},[445,450,455,465,470],{"type":44,"tag":191,"props":446,"children":447},{},[448],{"type":49,"value":449},"Wordpress",{"type":44,"tag":191,"props":451,"children":452},{},[453],{"type":49,"value":454},"CloudFlare",{"type":44,"tag":191,"props":456,"children":457},{},[458],{"type":44,"tag":60,"props":459,"children":462},{"href":460,"rel":461},"https://wordpress.org/plugins/simply-static/",[64],[463],{"type":49,"value":464},"Simply Static – WordPress plugin",{"type":44,"tag":191,"props":466,"children":467},{},[468],{"type":49,"value":469},"Github Actions",{"type":44,"tag":191,"props":471,"children":472},{},[473],{"type":49,"value":474},"Bash script",{"type":44,"tag":45,"props":476,"children":477},{},[478],{"type":49,"value":479},"Wordpress'te simply statik eklentisini kuruyoruz. Eklentinin Settings -> Deployment sayfasında Deployment Method olarak Local Directory seçiyoruz. PATH olarak /var/www/static/ girdim.\nBulunduğumuz domainle aynı yerde yayınlamayacağımız için Replacing URLs ayarlarında Relative Paths seçip / değerini giriyoruz.\nAdvanced ayarlar sayfasında da Force URL Replacements seçeneğini aktifleştiriyoruz.",{"type":44,"tag":45,"props":481,"children":482},{},[483],{"type":49,"value":484},"Benim DNS ayarlarım CloudFlare'de. Sitemi Proxied seçeneğini kapatıp sadece DNS kaydı olarak tutuyorum. certbot ile sunucuda SSL ayarlıyorum.",{"type":44,"tag":45,"props":486,"children":487},{},[488],{"type":49,"value":489},"Sunucuda dizini oluşturup eklentide Generate Static Files butonuna basarak işlemi başlatıyoruz.\nDebugging Mode ayarı var, onu aktifleştirebiliriz. Activity Log sayfasından işlemi takip edebiliyoruz.",{"type":44,"tag":45,"props":491,"children":492},{},[493,495],{"type":49,"value":494},"Sunucuda /var/www/static/ dizinini GitHub'da bir repo açarak oraya yüklüyoruz.\nDeploy keys ile yapmak için: ",{"type":44,"tag":60,"props":496,"children":499},{"href":497,"rel":498},"https://dylancastillo.co/how-to-use-github-deploy-keys/",[64],[500],{"type":49,"value":501},"How to Use GitHub Deploy Keys (dylancastillo.co)",{"type":44,"tag":45,"props":503,"children":504},{},[505],{"type":49,"value":506},"İlk sefer dışında buraya girmeye gerek kalmasın diye güncellemeleri push'layan bir bash script'i root hesabındayken crontab'a ekliyorum.",{"type":44,"tag":222,"props":508,"children":510},{"code":509},"* * * * * [ $(find /var/www/ufkayolculuk_wp/index.html -type f | wc -l) -gt 0 ];then /var/www/static.sh && cd /var/www/static && git add . && git commit -m \"Automatic Commit\" && git push; fi\n",[511],{"type":44,"tag":96,"props":512,"children":513},{"__ignoreMap":5},[514],{"type":49,"value":509},{"type":44,"tag":45,"props":516,"children":517},{},[518],{"type":49,"value":519},"Baştaki if komutunu bir kaç denemeden sonra farkederek ekledim. Statik dosyaların generate işlemi sırasında index.html olmadığı için bu sorgu sayesinde o işlemin bitmesini beklemiş oluyorum.",{"type":44,"tag":45,"props":521,"children":522},{},[523],{"type":49,"value":524},"GitHub deploy keys kullanmazsam Git işlemleri yapılabilmesi için şu komutu kullanıp bir defa manuel git commit ve push işlemini yapıyorum",{"type":44,"tag":222,"props":526,"children":528},{"code":527},"git config --global credential.helper store\n",[529],{"type":44,"tag":96,"props":530,"children":531},{"__ignoreMap":5},[532],{"type":49,"value":527},{"type":44,"tag":45,"props":534,"children":535},{},[536],{"type":49,"value":537},"Cron job ile çalıştırılan /var/www/static.sh dosyası:",{"type":44,"tag":222,"props":539,"children":541},{"code":540},"#!/bin/sh\n/usr/bin/find /var/www/static/ -maxdepth 3 -type f -name 'index.html' -exec /usr/bin/sed -i 's+\u003C\\\\/+\u003C/+g' {} \\;\n",[542],{"type":44,"tag":96,"props":543,"children":544},{"__ignoreMap":5},[545],{"type":49,"value":540},{"type":44,"tag":222,"props":547,"children":549},{"code":548},"chmod +x /var/www/static.sh\n",[550],{"type":44,"tag":96,"props":551,"children":552},{"__ignoreMap":5},[553],{"type":49,"value":548},{"type":44,"tag":45,"props":555,"children":556},{},[557],{"type":49,"value":558},"CloudFlare Pages'ta yeni bir kayıt oluşturuyoruz, GitHub'daki repomuza bağlıyoruz. Statik dosyalar olduğu için build ayarlarında değişiklik yapmadan yayına alıyoruz.",{"type":44,"tag":45,"props":560,"children":561},{},[562],{"type":49,"value":563},"Artık GitHub'da her değişiklikte sitemiz güncellenicek. Ayrıca CloudFlare Pages'taki pages.dev uzantılı adresi Custom Domains sayfasından kendi alan adınıza bağlayabiliyorsunuz.",{"title":5,"searchDepth":17,"depth":17,"links":565},[],"content:statik-wordpress-sitesi.md","statik-wordpress-sitesi.md","statik-wordpress-sitesi",1730633946777]