[{"_path":"/nuxt-studio-kullanarak-blog-sitesi","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Nuxt Studio Kullanarak Blog Sitesi","description":"","id":"3","date":"2024-11-03","categories":["web"],"tags":["nuxt"],"cover":"","readingTime":{"text":"2 min read","minutes":1.205,"time":72300,"words":241},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Geçen yıl Obsidian'da tuttuğum notları Obsidian publish kullanarak yayınlamıştım. Daha sonra ücretini ödemek istemedim ve site kapandı. Ücretsiz bir şekilde yayınlamak ve Nuxt kullanmak istemiştim, bu yazımda nasıl yaptığımı yazıcam."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt Studio, git tabanlı bir cms sunuyor. Markdown dosyalarınızı panelden düzenleyebiliyorsunuz, yaptığınız değişiklikler git hesabınızdan commit atılıyor. Hazır gelen yaygınlaştırma scripti var, siz deploy butonuna tıkladığınızda siteniz otomatik yayınlanıyor."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/bloggrify/bloggrify","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/bloggrify/bloggrify"}]},{"type":"text","value":" kullandım."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"bilgisayarımda git klasörlerimin olduğu dizinde terminali açıp şunu çalıştırdım:\ngit clone "},{"type":"element","tag":"a","props":{"href":"https://github.com/bloggrify/demo-mistral.git","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/bloggrify/demo-mistral.git"}]},{"type":"text","value":" bloggrify"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"yeni repo oluşturdum "},{"type":"element","tag":"a","props":{"href":"https://github.com/new","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/new"}]},{"type":"text","value":"\noluşturduktan sonra bilgisayarımda oluşturduğum klasörde şu komutları çalıştırdım:\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin "},{"type":"element","tag":"a","props":{"href":"https://github.com/cnkbekir/notes.git","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/cnkbekir/notes.git"}]},{"type":"text","value":"\ngit push -u origin main"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"push işleminde şöyle bi hata aldım:\nerror: RPC failed; HTTP 400 curl 22 The requested URL returned error: 400\nsend-pack: unexpected disconnect while reading sideband packet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Şu komutu yazdıktan sonra hata çözüldü, push işlemini tekrar yaptım:\ngit config --global http.postBuffer 157286400"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"cloudflare'de DNS ayarlarıma CNAME kaydı ekledim;\nname: notes\nContent: cnkbekir.github.io\nProxied"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"bloggrify demosundan gelen .github/workflows/deploy.yml dosyasını sildim."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"repo'ya kodları attıktan sonra nuxt studio kullandım. New project -> Import a nuxt project\nmenüde project -> deploy sayfasında Deploy butonuna tıkladım. İlk işlemden sonra \"Use custom domain\" seçeneği aktifleşti, onu işaretledim. Domain alanına notes.bekir.dev girip kaydettim."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ilk deployment işlemi pnpm versiyon hatası verdi. (bu hataları github reposunda actions içerisinde görebiliyoruz.)\nrepo'daki .github/workflows/studio.yml dosyasında pnpm/action-setup@v4 kısmına with şeçeneği ekledim:"}]},{"type":"element","tag":"pre","props":{"className":"language-yml shiki shiki-themes catppuccin-frappe github-dark","code":"uses: pnpm/action-setup@v4\n    with:\n        version: 9\n","language":"yml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#8CAAEE;--shiki-dark:#85E89D"},"children":[{"type":"text","value":"uses"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#81C8BE;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#A6D189;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" pnpm/action-setup@v4\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#8CAAEE;--shiki-dark:#85E89D"},"children":[{"type":"text","value":"    with"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#81C8BE;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#8CAAEE;--shiki-dark:#85E89D"},"children":[{"type":"text","value":"        version"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#81C8BE;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#EF9F76;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 9\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"başka hatalar da verdi. package-lock dosyalarını sildim, nuxt versiyonunu yükselttim.\ncommitleyince yine otomatik deploy başladı, siteyi yayınladı."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"site ayarlarını yaptım, "},{"type":"element","tag":"a","props":{"href":"https://github.com/cnkbekir/notes/commit/2b1319bbf92e4dee714b3e1dd65c36adacc838ce","rel":["nofollow"]},"children":[{"type":"text","value":"commitlerime"}]},{"type":"text","value":" bakılabilir."}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:Nuxt Studio Kullanarak Blog Sitesi.md","_source":"content","_file":"Nuxt Studio Kullanarak Blog Sitesi.md","_stem":"Nuxt Studio Kullanarak Blog Sitesi","_extension":"md"},{"_path":"/nuxt-capacitor-newrelic","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Nuxt - Capacitor - New Relic","description":"","id":"2","date":"2023-11-16","categories":["web"],"tags":["nuxt","capacitor","newrelic"],"cover":"","readingTime":{"text":"3 min read","minutes":2.02,"time":121200,"words":404},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt ve Capacitor ile geliştirdiğim mobil uygulamamı takip etmek için New Relic'i nasıl kurduğumu anlatıcam.\nÖncelikle New Relic ekibinin sunduğu paketi yüklüyoruz:"}]},{"type":"element","tag":"pre","props":{"code":"npm i @newrelic/newrelic-capacitor-plugin && npx cap sync\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm i @newrelic/newrelic-capacitor-plugin && npx cap sync\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New Relic hesabımızda Add Data butonuyla kurulum ekranını açarak listeden Capacitor'ü seçiyoruz. Buradaki bilgilerin çoğunu o ekranda da bulabilirsiniz. Alacağımız token'ı aşağıdaki kodda da kullanıcaz."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vue.js projelerinde App.vue dosyasında yapılan paket ayarlarını Nuxt projelerinde plugins klasöründe yapabiliyoruz. Buraya eklediğimiz dosyalar otomatik çalışıyor. Bilgi için: "},{"type":"element","tag":"a","props":{"href":"https://nuxt.com/docs/guide/directory-structure/plugins","rel":["nofollow"]},"children":[{"type":"text","value":"plugins/ · Nuxt Directory Structure"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Projede plugins klasörü altında newrelic.ts dosyasını oluşturuyoruz:"}]},{"type":"element","tag":"pre","props":{"code":"import { NewRelicCapacitorPlugin, NREnums, AgentConfiguration } from '@newrelic/newrelic-capacitor-plugin';\nimport { Capacitor } from '@capacitor/core';\n\nexport default defineNuxtPlugin(() => {\n  var appToken;\n  if (Capacitor.getPlatform() === 'ios') {\n    appToken = '...';\n  } else {\n    appToken = '...';\n  }\n\n  let agentConfig : AgentConfiguration = {\n    //Android Specific\n    // Optional:Enable or disable collection of event data.\n    analyticsEventEnabled: true,\n\n    // Optional:Enable or disable crash reporting.\n    crashReportingEnabled: true,\n\n    // Optional:Enable or disable interaction tracing. Trace instrumentation still occurs, but no traces are harvested. This will disable default and custom interactions.\n    interactionTracingEnabled: true,\n\n    // Optional:Enable or disable reporting successful HTTP requests to the MobileRequest event type.\n    networkRequestEnabled: true,\n\n    // Optional:Enable or disable reporting network and HTTP request errors to the MobileRequestError event type.\n    networkErrorRequestEnabled: true,\n\n    // Optional:Enable or disable capture of HTTP response bodies for HTTP error traces, and MobileRequestError events.\n    httpResponseBodyCaptureEnabled: true,\n\n    // Optional:Enable or disable agent logging.\n    loggingEnabled: true,\n\n    // Optional:Specifies the log level. Omit this field for the default log level.\n    // Options include: ERROR (least verbose), WARNING, INFO, VERBOSE, AUDIT (most verbose).\n    logLevel: NREnums.LogLevel.ERROR,\n\n    // iOS Specific\n    // Optional:Enable/Disable automatic instrumentation of WebViews\n    webViewInstrumentation: true,\n\n    // Optional:Set a specific collector address for sending data. Omit this field for default address.\n    // collectorAddress: \"\",\n\n    // Optional:Set a specific crash collector address for sending crashes. Omit this field for default address.\n    // crashCollectorAddress: \"\",\n\n    // Optional:Enable or disable sending JS console logs to New Relic.\n    sendConsoleEvents: true,\n\n    // Optional: nable or disable reporting data using different endpoints for US government clients.\n     fedRampEnabled: false\n  }\n\n  NewRelicCapacitorPlugin.start({appKey:appToken, agentConfiguration:agentConfig})\n})\n\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { NewRelicCapacitorPlugin, NREnums, AgentConfiguration } from '@newrelic/newrelic-capacitor-plugin';\nimport { Capacitor } from '@capacitor/core';\n\nexport default defineNuxtPlugin(() => {\n  var appToken;\n  if (Capacitor.getPlatform() === 'ios') {\n    appToken = '...';\n  } else {\n    appToken = '...';\n  }\n\n  let agentConfig : AgentConfiguration = {\n    //Android Specific\n    // Optional:Enable or disable collection of event data.\n    analyticsEventEnabled: true,\n\n    // Optional:Enable or disable crash reporting.\n    crashReportingEnabled: true,\n\n    // Optional:Enable or disable interaction tracing. Trace instrumentation still occurs, but no traces are harvested. This will disable default and custom interactions.\n    interactionTracingEnabled: true,\n\n    // Optional:Enable or disable reporting successful HTTP requests to the MobileRequest event type.\n    networkRequestEnabled: true,\n\n    // Optional:Enable or disable reporting network and HTTP request errors to the MobileRequestError event type.\n    networkErrorRequestEnabled: true,\n\n    // Optional:Enable or disable capture of HTTP response bodies for HTTP error traces, and MobileRequestError events.\n    httpResponseBodyCaptureEnabled: true,\n\n    // Optional:Enable or disable agent logging.\n    loggingEnabled: true,\n\n    // Optional:Specifies the log level. Omit this field for the default log level.\n    // Options include: ERROR (least verbose), WARNING, INFO, VERBOSE, AUDIT (most verbose).\n    logLevel: NREnums.LogLevel.ERROR,\n\n    // iOS Specific\n    // Optional:Enable/Disable automatic instrumentation of WebViews\n    webViewInstrumentation: true,\n\n    // Optional:Set a specific collector address for sending data. Omit this field for default address.\n    // collectorAddress: \"\",\n\n    // Optional:Set a specific crash collector address for sending crashes. Omit this field for default address.\n    // crashCollectorAddress: \"\",\n\n    // Optional:Enable or disable sending JS console logs to New Relic.\n    sendConsoleEvents: true,\n\n    // Optional: nable or disable reporting data using different endpoints for US government clients.\n     fedRampEnabled: false\n  }\n\n  NewRelicCapacitorPlugin.start({appKey:appToken, agentConfiguration:agentConfig})\n})\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burada fedRampEnabled ayarı ile ilgili bir sorun varmış. Bundan dolayı çok test yapmak zorunda kaldım. GitHub'da bir issue oluşturdum ve sorun kısa sürede çözüldü: "},{"type":"element","tag":"a","props":{"href":"https://github.com/newrelic/newrelic-capacitor-plugin/issues/59","rel":["nofollow"]},"children":[{"type":"text","value":"Can't get android logs - Nuxt3 - Ionic · Issue #59 · newrelic/newrelic-capacitor-plugin (github.com)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Android için build.gradle dosyamızı düzenliyoruz:"}]},{"type":"element","tag":"pre","props":{"code":"buildscript {\n    ...\n    repositories {\n      ...\n      mavenCentral()\n    }\n    dependencies {\n      ...\n      classpath \"com.newrelic.agent.android:agent-gradle-plugin:7.1.0\"\n    }\n  }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"buildscript {\n    ...\n    repositories {\n      ...\n      mavenCentral()\n    }\n    dependencies {\n      ...\n      classpath \"com.newrelic.agent.android:agent-gradle-plugin:7.1.0\"\n    }\n  }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ve app/build.gradle dosyamızı düzenliyoruz:"}]},{"type":"element","tag":"pre","props":{"code":"apply plugin: \"com.android.application\"\napply plugin: 'newrelic' // <-- bu satırı ekle\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apply plugin: \"com.android.application\"\napply plugin: 'newrelic' // <-- bu satırı ekle\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Projelerimizi derleyerek yayına alabiliriz."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:nuxt-capacitor-newrelic.md","_source":"content","_file":"nuxt-capacitor-newrelic.md","_stem":"nuxt-capacitor-newrelic","_extension":"md"}]